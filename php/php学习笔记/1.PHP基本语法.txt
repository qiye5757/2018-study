1.zend studio 
notepad++
gvim


2.php四种书写格式
2.1  <?php
   echo"这是一句假话"；
       ?>
2.2    <?
   echo "是的，很漂亮";   
       ?>
2.3    <%
      
       %>
2.4    <script language="php">
           echo "不行"; 
        </script>
注意要点：别习惯性的在结束后加两个空格

3.功能执行语句  后面必须加分号
   echo "aaaaaa";
   $a="100";
  结构定义语句  后面一定不要加分号
   if（）{}
   while（）{}
   class demo{}
   function demo{}
   与 ?>  相邻的一条语句可以不加分号
4.注释调试法
  输出调试法
   单行注释
  //
  #
   多行注释  可以加单行注释，不能在多行注释中多行注释
    /*
    
    */
    文档注释(可以用软件提取出来的)
    /**


    */
   注释一定要写在代码的上面或者右边
5.  只能通过变量来取内容

6.变量以$开始: $name = "毕恩竹";
 起名字的规则:变量的名称声明时一定要有意义
              不能以数字开头
	      不能有运算符号+-*/>=
	      不能有空格
	      可以用系统关键字
	      变量名称区分大小写(驼峰式)
var_dump   输出内容和类型
isset();   变量在不在  一般和if语句结合
unset()      清除变量
empty()    如果内容为空为真，不为空为假  0 null 都是为空

7.可变变量 
   在变量前面在补上一个$,里层变量值是外层变量名
   $必须连在一起 


8.变量的引用(其实就相当于对一个变量的别名)
  & 可以得到变量的地址然后赋给另一个变量
  注意事项:1.只有变量才有地址，也就是只有变量才有引用
           2.一个变量发生变化，另一个变量的值也会变化
	   3.在使用unset(函数时)，如果有引用关系，只是解除了这个引用关系
           4.如果两个变量是引用关系，一个变，另一个变。如果给其中一个变量赋予引用，则解除这个引用关系。

9.类型是由内容决定的即为弱类型  弱类型比较灵活
先规定好类型再写内容即为强类型
       8种数据类型：
       四种标量类型：
           布尔型  boolean
	   整型    integer
	   浮点型  float /double
	   字符串  String
	两种复合类型：
	   数组    Array
	   对象    Object
	 两种特殊类型：
           资源    Resource
	   NULL   相当于unset

10.  boolean  一个字节
     为假值的：
       1. boolean 的 false
       2.整型中的 0
       3.浮点型中的0.00
       4.字符串的null
       5.字符串的0
       6.空的数组
       7.空的对象(仅适用于php4)

11.整型   4个字节
077      8进制
0xFF     16进制数
mkdir函数  创建目录
以8进制和16进制定义的变量  输出的是16进制数

浮点型    8个字节
超出整型范围换成float
太长显示为科学计数法
浮点数是一个近似值 

12.字符串
    声明时要用单引号或双引号
    字符串是没有长度限制的
    在单引号中可以使用双引号 在双引号中不能使用单引号
    在单引号中不能使用单引号 在双引号中不能使用双引号
    可以通过转义字符\

13.单引号和双引号的区别
    1.双引号中可以解析变量，而在单引号中不能解析变量
    2.如果没空格，可以加个{}强行解析
    3.再双引号中可以使用转义字符\n \t \r 在单引号中不能支持转义字符(在单引号中只能转义单引号自己还可以转义转义字符本身)
 \n   换行
 \r   回车
 \t   水平制表符
 \\   反斜线
 \$   美元符号
 \''  双引号
   尽量都用单引号

14.声明字符串的第三种方法:定界符号声明字符串
     $str =<<<hello
         可以使用大量的字符串
hello;
     1.使用<<<
     2.在开始的定界符中(自定义的字符串)一定要左边挨着<<<
写完定界的>字符串，一定要直接回车(空格都不能有)
     3.结尾的字符串定界中一定要顶头写和开始的字符相同直接
回车，空格都不能有
     4.php5.3以上  使用单引号在开始的定界符将支持双引号的功能变成单引号

 15. 数据类型之间的转换
    一.强制转换

    var_dump();打印出来类型和值

    getType(变量)；获取变量名称

    1.setType(变量，”类型“): 将原变量转换
    2. 在变量使用时前面加上类型符号: 在赋值时给新变量一个新类型，原变量类型不变
    3.intval(),floatval(),strval(),
    二.自动转换
     小类型会转换成大类型
     整型如果超过最大空间会变成浮点型
     以数字开头的字符串，才能装换成整型


 16.判断是否为什么类型
    is_array() 
    is_null()
    is_numberic()

17.常量：一旦声明，这个常量的值就不会改变
    1.常量是使用函数声明的  define()
    2.如果常量没有声明,则常量名在使用时，会自动装换成字符 串(效率很低)。
    3.常量名称，不要加$符号
    4.常量名称默认是区分大小写的，习惯上常量的名称要全部大写
    5.可以使用define()第三个参数来决定是否让这个常量名称区分大小写 true false
    6.常量的值只支持标量数据类型
    7.常量不能使用unset()清除一个常量
    8.可以用defined();；来判断一个常量是否存在
    9.constant()函数可以输出常量
    10.用get_defined_constants()可以获得所有已定义的常量列表,在模板中使用

 18.预定义变量
 魔术常量

19.运算符
   1.算术运算符
      + - * / % ++ --
   2.赋值运算符
      = += -= *= /= %=
   3.比较运算符
     > < >= <= === !==  !=
   4.逻辑运算符
     && || !
   5.位运算符
     &  |  ^  ~ >>  <<
   6.其他运算符
     ? : @ -> ->
 20.算数运算符 
 在其他运算符中，+除了有加法的作用，还有连接字符串的功能
eg：echo 1+1+"4+5+6"+1+1;
   结果为8；
   %  结果的正负跟前面的有关系，跟后边的没关系
   小数求模完全没有用
   1.让一个数不超过一个数
   2.求什么被整除
   php中的%是将小数转为整数再求模

 21.++ --  bool型没用
      字符串有用  一般不会用到
      （其他语言中++--只用于整型和浮点型有关系）
 22.   .=
   单引号用  .
   双引号可以用   {}
     echo '这个变量的值:'.$a.'<br>';
     echo "这个变量的值:{$a}<br>";
     echo "这个变量的值:",$a,"<br>";
 23.比较运算符
    1.比较后的结果是一个boolean型，用在if和while语句中
    !=  <>不等于
   ===  判断两边的类型和值是否相同 (只有弱语言类型才有)
   !==  
 24.逻辑运算符
 异或  xor 当两边操作数只有一个为true时，返回true，否则返回false。
 特性: 短路
 eg：$a = 1;
   $a > 5 && $a <100
   只执行前一步  不执行下一步
 25.位运算符：
 &   按位与   都为1，结果为1
 |   按位或   都为零，结果才为零
 ^   按位异或 两位不同，结果为1
 ~   按位非   
 <<  左移
 >>  右移
 26.其他运算符
   ? :
   ``  字符串  必须是操作系统的命令
   @  屏蔽错误信息（致命性错误除外）

  27.echo 字符串  变量 连接方法 . ，
 大写字符串  可以解释变量  转义符变量挨在一起{}
   