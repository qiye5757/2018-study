1.字符串的声明(数据类型)
   1.可以使用双引号，也可以使用单引号

      双引号中可以解析变量，可以使用所有的转义字符
    
    分割，匹配，查找，替换

    特点:如果是其他类型的数据，也可以使用字符串处理函数，先将其他类型自动转换成了字符串再处理

    字符串可以像数组一样，通过下标来访问到每个字符，但不是数组(数组也可以通过{}访问成员)

    建议:访问数组用[]
    访问字符串用{}

    除了有英文字符 还有中文字符
    gb2312  每个汉字占两个字符
    UTF-8  每个汉字占三个字符
    
    strlen  字符串的统计函数   获取字符串的长度
    count   计算数组中的单元数目或者对像中的属性个数
2.  也可以修改字符串中的字符
  eg:  
       $str = 'hello';
       $str[2] = 'world';
       结果$str = 'hewlo';
       原因：字符串在内存中是连续存在的，所以想修改的话，每个字符的那个位置只能放一个字符

     数组和对象在字符串中如何被解析？
     数组:  把数组中的元素在这里面放,如下三种方式
          $int = array("one"=>100,"two"=>"200");

	  echo "aaaaaaaa$int[one]aaaaaaa";
	  echo "aaaaaaaaa{$int['two']}aaaaaaaaaa<br>";
          echo "aaaaa".$int['two']."aaaaa<br>"; 

     对象:也是直接访问
          {}
	  或者直接使用 

3.常用的字符串输出函数
     mb_多字节的 单字节的也行
        只在用带汉字的的时候才用这个 平时别用
    var_dump();
    print_r();

    echo();
    print()
    die();
    printf();
    sprintf();

    echo()和print()的区别
    1.print()有返回值，echo()没有返回值
    2.echo的指令方式可以打印多个值,print()只能打印一个值

    die():输出并退出程序，是exit的别名关系 0到254  255php预留的
    
    printf格式化输出
    %%  返回百分比符号‘
    %b  二进制数
    %c  依照ASCII值的字符
    %d  带符号十进制数
    %e  可续计数法
    %u  无符号十进制数
    %f  浮点数
    %o  八进制数
    %s  字符串
    %x  十六进制数

    sprintf  格式化返回

    ord返回字符的ASCII码

4.常用的字符串格式化函数
    rtrim函数  去除字符串中的一些东西
    rtrim(a,b)  a为删除的哪个字符串  
      b为删除的字符    如果b没写，那就删除字符串右边的空格
    删除左边的 ltrim
    删除两边的  trim
    ..  可以指定一个范围


    str_pad()按照需求对字符串进行填充
    四个参数  第一个参数是要填充的字符串   第二个参数是些字符串填充后的大小   第三个参数是用什么来填充  默认往右边进行填充    第四个参数是写往那边填充
    STR_PAD_LEFT  左边
    STR_PAD_RIGHT  右边
    STR_PAD_BOTH   两边


    字符串大小写的转换
    strtolower     将字符串全部变成小写
    strtoupper     将字符串全部变成大写
    ucfrist        将字符串的首字母大写
    ucwords        将字符串的每个单词的首字母大写
    返回值是一个字符串
    eg:
         $str = "abfffsakdskdjlsmflasdjfla";
	 echo strtolower($str).'<br>';
	 echo strtoupper($str).'<br>';
	 echo ucfrist($str).'<br>';
	 echo ucwords($str).'<br>';
5.和html标签相关联的字符串格式
     htmlspacialchars   将用户输入的表单内容输出而不是执行，即将其转成实体
     addslashes   在输出的双引号 或者单引号 等等前面加上一个/防止sql注入
     stripslashes  反引用一个引用字符串
     strip_tags   从字符串中去除HTML和PHP标记，而且可以指定删除的标签
     nl2br   将\n变成<br>
6.字符串格式化函数
     1.strrev  颠倒字符串。将字符串前后颠倒
     2.strlen  取得字符串的长度
     3.number_format   格式化数字,货币，时间等
        两个参数  第一个参数是格式化的字符，第二个参数是写有几位小数的
	第二种方式  四个参数   后面两个是小数点的格式  和 千分制的格式
     4.md5      加密函数
        

做国际化的程序注意的问题有:
     数字格式  时间格式  金钱格式

7.字符串的比较函数
     1.使用等号比较字符串(基本上都是有这个)
       注意:如果不区分大小写的进行比较，两个比较的字符串要么都变成大写，要么都变成小写
     2.strcmp   二进制安全字符串比较
       两个参数  如果str1小于str2  返回负数  大于  正数  等于  0
       根据该字符串的首字母的ASCII比较，相同的话就是下一个字母.
     3.strcasecmp   不区分大小写的

     4.按自然顺序比较
      strnatcmp
      strnacasecmp

      这几个函数都可以作为usort函数中的第二个参数中的自定义函数

8.字符串面试题
     1.不用PHP函数，用方法写一个字符串翻转函数
     $str = "abcdefghijklmnopqrst";
	function fan($str){
	     $n = "";
	     $a = strlen($str)-1;
	     for($i=$a;$i>=0;$i--){
	          $n .=$str{$i};
	     }
	     return $n;
	}
	echo fan($str);
     2.写一个函数，将一个字符串转换成每三位用逗号隔开的形式
        系统函数  $str = '1234567890';
	     echo number_format($str);
	 自己写  $str
	    $str = "1234567890";
            function tihuan($str){
	             $n = "";  //定义一个空字符串
		     $m = strlen($str);  //获取字符串长度
		     $k = $m % 3;
		     for($i = 0;$i < $m; $i++){
			    if($i%3 == $k && $i!=0){
			        $n .= ',';
			      }
		             $n .=$str{$i};
		      }
		      return $n;
	     }
	    echo tihuan($str); 
    3.请写一个获取文件扩展名的函数
        正斜杠/   在unix，linux系统和网址中表示目录
	反斜杠\   在windows系统中用来表示目录



	strstr   查找字符串的首次出现 区分大小写  返回string
	 三个参数  第一个参数是查找的字符串  第二个参数是要查找的子符串  第三个参数bool型可以写，也可以不写，不写就输出这个字符串出现的位置以后的都输出  写的话就输出前面的
	stristr   
	strpos   查找字符串首次出现的位置  返回值int
        三个参数  第三个参数是写从那块进行查找整型
	strrpos   查找字符串最后一次出现的位置  第三个参数可以是负数
	substr   返回字符串的子串




	explode  字符串分割函数
	三个参数  第一参数是要分割的字符串，第二个参数是拿什么来进行分割，第三个参数可有可无，有的话，是一个整形，来说明最多可以分多少个，如果没分完，将其他的放在最后一个里面


	list     将数组中的一些值赋给一些变量
	如果list的参数仅仅是变量的话  那么就会从左往右进行赋值
	如果参数是索引数组的话   从右往左进行赋值


        <?php
                function extname($url){
                         if(strpos($url,"?")){
	                      list($file) = explode("?",$url);
	                    }else{
	                           $file = $url;
	                    }
	                    //第二步取出文件名

	                  $loc = strrpos($file,"/")+1;

	                  $filename =substr($file,$loc);

	                 //第三步取扩展名称
                         $arr = explode(".",$filename);

	                  return array_pop($arr);
                      }
   	        $arr = "http://localhost/test.php?145778";
                echo extname($arr);
